"use client";
import React, { useState, useEffect } from "react";
import axios from "axios";
import ChatInterface from "./ChatInterface";
import { Rnd } from "react-rnd";

const CandidateCard = () => {
  const [currentCandidatesList, setCurrentCandidatesList] = useState([]);

  const fetchCandidates = async () => {
    try {
      const res = await axios.get("http://localhost:5000/fetch-candidates", {
        withCredentials: true, // If you use cookies for auth
      });
      setCurrentCandidatesList(res.data.data); // Assuming response shape: { message, data: [...] }
    } catch (err) {
      console.error(
        "Failed to fetch candidates:",
        err.response?.data || err.message
      );
    }
  };

  useEffect(() => {
    fetchCandidates();
  }, [currentCandidatesList]);

  const [showModal, setShowModal] = useState(false);
  const [selectedCandidate, setSelectedCandidate] = useState(null);

  const handleCandidateClick = (cand) => {
    setSelectedCandidate(cand);
    setShowModal(true);
  };

  const handleClose = () => {
    setShowModal(false);
    setSelectedCandidate(null);
  };

  return (
    <div className="p-6 min-h-screen">
      <div className=" grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 gap-6">
        {currentCandidatesList.map((cand, index) => (
          <div
            key={index}
            onClick={() => handleCandidateClick(cand)}
            className="overflow-auto bg-gray-950 p-6 h-96 w-full max-w-sm mx-auto rounded-lg hover:bg-gray-800 hover:border-2 border-blue-500 transition-all cursor-pointer shadow-lg hover:shadow-xl"
          >
            <div className="h-full flex flex-col justify-between text-white">
              <div className="space-y-4">
                <div className="text-lg">
                  🙍🏻‍♂️ Name: <span className="font-semibold">{cand.name}</span>
                </div>
                <div className="text-lg">
                  ✉︎ Email: <span className="font-semibold">{cand.email}</span>
                </div>
                <div className="text-lg">
                  🎯 Position: <span className="font-semibold">{cand.position}</span>
                </div>
              </div>
              <div className="mt-4 pt-4 border-t border-gray-700">
                <div className="text-sm text-gray-300">
                  🛡️ Added by: {cand.addedBy}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Modal outside the map loop */}
      {showModal && selectedCandidate && (
  <Rnd
    default={{
      x: 100,
      y: 10,
      width: 800,
      height: 600,
    }}
    minWidth={400}
    minHeight={400}
    bounds="window"
    className="z-50 fixed"
  >
    <div className="bg-black  rounded-lg w-full h-full relative flex flex-col border-2 border-blue-500 shadow-lg">
      {/* Header */}
      <div className="flex justify-between items-center p-4 border-b border-gray-700 cursor-move bg-gray-800 text-white drag-handle">
        <h2 className="text-xl font-bold">
          Chat with {selectedCandidate.name}
        </h2>
        <button
          onClick={handleClose}
          className="text-3xl hover:text-red-500 transition-colors"
        >
          ×
        </button>
      </div>

      {/* Chat Interface */}
      <div className="flex-1 overflow-hidden bg-slate-900 rounded-b-lg">
        <ChatInterface userName={selectedCandidate.name} />
      </div>
    </div>
  </Rnd>
)}
    </div>
  );
};

export default CandidateCard;